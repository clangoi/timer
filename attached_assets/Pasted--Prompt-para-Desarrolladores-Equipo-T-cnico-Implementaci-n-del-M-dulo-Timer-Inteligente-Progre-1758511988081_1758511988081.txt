**Prompt para Desarrolladores / Equipo T√©cnico ‚Äî Implementaci√≥n del M√≥dulo ‚ÄúTimer Inteligente Progresivo con Secuencias Tabata‚Äù**

> **Objetivo General:**  
> Desarrollar un **sistema de timer multifuncional, persistente y altamente personalizable**, centrado en tres modos clave:  
> 1. **Cron√≥metro progresivo desde 0 (sin l√≠mite)** ‚Äî ideal para ejercicios libres.  
> 2. **Sistema avanzado de secuencias Tabata** ‚Äî con gesti√≥n completa de m√∫ltiples tabatas consecutivos.  
> 3. **Interfaz flotante + persistencia global + feedback sensorial (audio/visual)** ‚Äî para m√°xima usabilidad durante entrenamientos.  
>   
> Todo debe gestionarse mediante un **estado global compartido (Context API)**, con controles intuitivos, notificaciones integradas y configuraciones que persisten entre sesiones.

---

> **Requisitos Funcionales Detallados:**

### ‚ñ∂Ô∏è **Modo Cron√≥metro Progresivo (Libre)**
- Cuenta **desde 0 segundos sin l√≠mite de tiempo**.
- Ideal para registrar duraci√≥n de ejercicios abiertos o sesiones de flujo libre.
- Debe mostrar formato **MM:SS** actualizado en tiempo real.
- Debe incluir controles:  
  - Iniciar / Pausar (mismo bot√≥n, cambia estado)  
  - Reiniciar (vuelve a 00:00, conserva configuraci√≥n)  
  - Minimizar / Maximizar (modo flotante)  
  - Cerrar (sin perder estado ‚Äî ver persistencia)

---

### ‚ñ∂Ô∏è **Modo Secuencias Tabata (Avanzado)**

#### ‚û§ Gesti√≥n de Secuencias:
- El usuario puede **crear una secuencia compuesta por m√∫ltiples bloques Tabata**.
- Cada Tabata es editable individualmente:  
  - Tiempo de trabajo (ej: 20s)  
  - Tiempo de descanso corto (ej: 10s)  
  - Tiempo de descanso largo entre sets (ej: 60s)  
  - Repeticiones por set  
  - Nombre personalizado (ej: ‚ÄúTabata Piernas‚Äù, ‚ÄúSprint Intenso‚Äù)

#### ‚û§ Acciones sobre la secuencia:
- ‚úÖ **Agregar** nuevo Tabata al final de la secuencia  
- ‚úèÔ∏è **Editar** cualquier Tabata existente (configuraci√≥n + nombre)  
- ‚ùå **Eliminar** un Tabata espec√≠fico  
- üßπ **Limpiar toda la secuencia** (reset completo)  
- ‚ñ∂Ô∏è **Navegaci√≥n autom√°tica**: al terminar un Tabata, pasa autom√°ticamente al siguiente  
- üìç **Indicador visual en pantalla**: *‚ÄúSecuencia 2/5‚Äù* durante ejecuci√≥n

---

### ‚ñ∂Ô∏è **Controles Universales (Todos los modos)**
- **Iniciar / Pausar**: Bot√≥n √∫nico que cambia su etiqueta e icono seg√∫n estado (`isRunning`, `isPaused`)  
- **Reiniciar**: Vuelve al estado inicial sin borrar configuraci√≥n  
- **Siguiente**: Salta al siguiente ejercicio o fase, incluso si el tiempo no ha terminado *(√∫til para ajustes en vivo)*  
- **Configurar**: Abre panel de ajustes espec√≠ficos del modo actual  
- **Minimizar / Maximizar**: Conmuta entre vista completa y burbuja flotante  
- **Cerrar**: Oculta el timer, pero **mantiene el estado en memoria y persistencia**

---

### ‚ñ∂Ô∏è **Estados del Timer (Globales)**
- `isRunning`: Timer activo y contando  
- `isPaused`: Timer detenido, pero con tiempo guardado  
- `isCompleted`: Timer finalizado ‚Üí activa notificaci√≥n de audio + visual  
- `currentMode`: ‚Äúcronometer‚Äù | ‚Äútabata‚Äù | ‚Äúcountdown‚Äù  
- `currentSequenceIndex`: √çndice del Tabata actual en secuencia  
- `sequenceTotal`: Total de Tabatas en la secuencia

---

### ‚ñ∂Ô∏è **Sistema de Persistencia**
- ‚úÖ **Guardado autom√°tico en tiempo real** de:  
  - Configuraciones de cada Tabata  
  - Estado actual del timer (tiempo transcurrido, pausado, etc.)  
  - Modo seleccionado (recuerda el √∫ltimo usado al reabrir la app)  
- Debe persistir incluso si:  
  - El usuario cierra la app  
  - Cambia de secci√≥n  
  - El dispositivo se bloquea (si el SO lo permite)

---

### ‚ñ∂Ô∏è **Notificaciones y Feedback**

#### ‚û§ Audio Integrado (sin archivos externos):
- üîä Sonido suave al **iniciar/pausar**  
- üîî Sonido distintivo al **cambiar de fase** (trabajo ‚Üí descanso ‚Üí descanso largo)  
- üéØ Notificaci√≥n clara (sonido + vibraci√≥n si es m√≥vil) al **finalizar secuencia completa**

#### ‚û§ Feedback Visual Din√°mico:
- üü¢ **Borde verde** cuando el timer est√° activo (`isRunning`)  
- üî¥ **Fondo/indicador ROJO** durante fase de **TRABAJO**  
- üü° **Fondo/indicador AMARILLO** durante **DESCANSO CORTO**  
- üîµ **Fondo/indicador AZUL** durante **DESCANSO LARGO / CRON√ìMETRO LIBRE**  
- ‚úÖ **Verde brillante + checkmark** al completar  
- üìä **Texto descriptivo visible**: *‚ÄúTRABAJO‚Äù*, *‚ÄúDESCANSO‚Äù*, *‚ÄúDescanso entre sets‚Äù*  
- üìà **Progreso visual**: *‚ÄúSet 3/8 - Ejercicio 2/4‚Äù*

---

### ‚ñ∂Ô∏è **Configuraci√≥n Avanzada**
- üõ†Ô∏è Todos los tiempos son **personalizables al segundo** (no solo predefinidos)  
- ‚úèÔ∏è Nombres personalizados para cada Tabata dentro de la secuencia  
- üîÑ Conversi√≥n autom√°tica de segundos a formato **MM:SS** en display  
- ‚è±Ô∏è Muestra **tiempo restante** (en modos countdown/Tabata) o **tiempo transcurrido** (en cron√≥metro)

---

### ‚ñ∂Ô∏è **Arquitectura y Estado Global**
- Utilizar **Context API (o Zustand/Redux si ya est√° en el stack)** para compartir estado en toda la app.
- Acciones globales disponibles:  
  ```ts
  setMode(mode: 'cronometer' | 'tabata' | 'countdown')  
  startTimer()  
  pauseTimer()  
  resetTimer()  
  setFloating(isFloating: boolean)  
  updateTabataConfig(index: number, config: TabataConfig)  
  updateTimerConfig(config: TimerConfig)  
  nextPhase() // para saltar manualmente
  ```

---

> **Resultado Esperado:**  
> El usuario puede:  
> - Medir sesiones libres con un cron√≥metro infinito.  
> - Crear, editar y ejecutar secuencias complejas de Tabata con navegaci√≥n autom√°tica.  
> - Recibir feedback claro por audio y color en cada fase.  
> - Cerrar o minimizar el timer sin perder su progreso.  
> - Volver a la app y encontrar todo como lo dej√≥.  
>   
> El sistema es robusto, profesional y dise√±ado para atletas, entrenadores y usuarios exigentes que necesitan precisi√≥n, flexibilidad y continuidad.

> **Nota clave:**  
> Este no es un simple cron√≥metro. Es un **sistema de gesti√≥n de tiempo inteligente para entrenamiento de alto rendimiento**, con l√≥gica de estado, persistencia, feedback sensorial y personalizaci√≥n avanzada. Su correcta implementaci√≥n transformar√° la experiencia de entrenamiento en la app.

---

‚úÖ Listo para copiar en tickets t√©cnicos, documentaci√≥n de arquitectura o briefings de desarrollo. Incluye especificaciones de UX, l√≥gica de estado, persistencia, audiovisual y arquitectura global.